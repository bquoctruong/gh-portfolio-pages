name: Docker Security Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Run workflow manually from the Actions tab
  workflow_dispatch:

# Add default permissions for all jobs
permissions:
  contents: read
  security-events: write
  
jobs:
  dockerfile-lint:
    runs-on: ubuntu-latest
    # Skip this job if the pull request is being closed without merging
    if: github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true
    # Add specific permissions for this job
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error
          format: sarif
          output-file: hadolint-results.sarif
          ignore: DL3018,DL3059
          
      - name: Upload hadolint results
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: hadolint-results.sarif
          wait-for-processing: true
          category: hadolint

  docker-build-test:
    runs-on: ubuntu-latest
    needs: dockerfile-lint
    # Skip this job if the pull request is being closed without merging
    if: github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true
    # Add specific permissions for this job
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Build with BuildKit security options
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: portfolio-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Enable BuildKit security features
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # Security related build options
          build-contexts: |
            app=.
          provenance: false
          sbom: true
          outputs: type=docker,name=portfolio-app:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: portfolio-app:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          timeout: '10m'
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          wait-for-processing: true
          category: trivy

  container-structure-test:
    runs-on: ubuntu-latest
    needs: docker-build-test
    # Skip this job if the pull request is being closed without merging
    if: github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create Container Structure Test file
        run: |
          cat > container-structure-test.yaml <<EOF
          schemaVersion: 2.0.0
          metadataTest:
            cmd: ["node", "--require", "./src/instrumentation.cjs", "src/index.js"]
            exposedPorts: ["80", "8080"]
            user: "node"
          fileExistenceTests:
            - name: 'Package.json exists'
              path: '/usr/src/app/package.json'
              shouldExist: true
            - name: 'Source code exists'
              path: '/usr/src/app/src/index.js'
              shouldExist: true
            - name: 'Source directory permissions'
              path: '/usr/src/app/src'
              shouldExist: true
              permissions: 'drwxr-xr-x'
          commandTests:
            - name: 'Node version'
              command: "node"
              args: ["--version"]
              expectedOutput: ["v18"]
            - name: 'Non-root user'
              command: "whoami"
              expectedOutput: ["node"]
          EOF

      - name: Build Docker image
        run: docker build -t portfolio-app:${{ github.sha }} ./

      - name: Install container-structure-test
        run: |
          curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
          chmod +x container-structure-test-linux-amd64
          sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

      - name: Test Docker image structure
        run: container-structure-test test --image portfolio-app:${{ github.sha }} --config container-structure-test.yaml

  zap-scan:
    runs-on: ubuntu-latest
    needs: container-structure-test
    # Skip this job if the pull request is being closed without merging
    if: github.event_name != 'pull_request' || github.event.action != 'closed' || github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t portfolio-app:${{ github.sha }} ./

      - name: Run Docker container
        run: |
          docker run -d -p 8080:8080 --name portfolio-container portfolio-app:${{ github.sha }}
          sleep 10  # Allow time for container to start

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        continue-on-error: true
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: false

      - name: Stop Docker container
        if: always()
        run: docker stop portfolio-container 