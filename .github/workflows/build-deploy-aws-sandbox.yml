name: Build, Deploy to AWS Lambda
on:
  push:
    branches: ['*', '*/*', '**','!main']
  workflow_run:
    workflows: [CodeQL]
    types:
      - completed
jobs:
  build:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install datadog-lambda-js dd-trace

      - name: Package Lambda function
        run: |
          zip -r lambda_function.zip .

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda_function.zip
          path: lambda_function.zip
  upload_to_s3:
    needs: 
      [build]
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda_function.zip
          path: /tmp

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Upload to AWS S3
        run: |
            aws s3 cp /tmp/lambda_function.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/lambda_function.zip
  deploy-aws:
    # Add 'id-token' with the intended permissions for workload identity federation
    needs: 
      [upload_to_s3]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} \
            --s3-bucket ${{ secrets.AWS_S3_BUCKET_NAME }} --s3-key lambda_function.zip
  cleanup_s3:
    needs: 
      [deploy-aws]
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1
      - name: Remove lambda function
        run: |
            aws s3 rm s3://${{ secrets.AWS_S3_BUCKET_NAME }}/lambda_function.zip